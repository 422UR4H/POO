/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lista_1;

/**
 *
 * @author 422UR4H
 */
public class Ex_1 {
    //A. Imprima todos os n√∫meros de 150 a 300.
    public void imprimirSequencia() {
        for (int i = 150; i < 301; i++){
            System.out.println(i);
        }
    }
     
    //B. Imprima a soma de 1 at√© 1000.
    public void imprimirSomatorio() {
        int soma = 0;
        for (int i = 1; i < 1001; i++) {
            soma += i;
        }
        System.out.println(soma);
    }
    
    //C. Imprima todos os m√∫ltiplos de 3, entre 1 a 100.
    public void imprimirMultiplo() {
        for (int i = 1; i < 101; i++) {
            if (i % 3 == 0) {
                System.out.println(i);
            }
        }
    }
    
    //D. Imprima os fatoriais de 0 a 10. O fatorial de n √© n ‚àô (n ‚àí 1) ‚àô (n ‚àí 2) ‚àô 1. O
    public void imprimirFatoriais() {
        for (int i = 0; i < 11; i++) {
            int fat = 1;
            for (int j = 2; j <= i; j++) {
                fat *= j;
            }
            System.out.println(fat);
        }
    }
    //E. No c√≥digo do exerc√≠cio anterior, aumente a quantidade de n√∫meros que ter√£o os
    //fatoriais impressos at√© 20, 30, 40. Em um determinado momento, al√©m desse
    //c√°lculo demorar, vai come√ßar a mostrar respostas completamente erradas. Por
    //qu√™? Procure modificar de int para long para ver alguma mudan√ßa.
    public void imprimirMuitosFatoriais() {
        for (int i = 0; i < 31; i++) {
            int fat = 1;
            long fat2 = 1;
            for (int j = 2; j <= i; j++) {
                fat *= j;
                fat2 *= j;
            }
            System.out.println(i + ":" + fat);
            System.out.println(i + ":" + fat2);
        }
    }
    
    //F. Imprima os primeiros n√∫meros da s√©rie de Fibonacci at√© passar de 100. A s√©rie de
    //Fibonacci √© a seguinte: 0, 1, 1, 2, 3, 5, 8, 13, 21, etc... Para calcul√°-la, o primeiro
    //elemento √© 0, o segundo √© 1, o n-√©simo √© (ùëõ ‚àí 1) somado ao (ùëõ ‚àí 2). Por
    public void imprimirFibonacci(int n) {
        int x = 0;
        int y = 1;
        int z = 1;
        if (n < 1) {
            System.out.println("N√£o existem termos menores que o primeiro!");
        } else if (n == 1) {
            System.out.println(x);
        }
        for (int i = 3; i <= n; i++) {
            z = x + y;
            x = y;
            y = z;
        }
        System.out.println(z);
    }
    
    //G. Escreva um programa que, dada uma vari√°vel x com algum valor inteiro, temos
    //um novo x de acordo com a seguinte regra:
    //‚Ä¢ Se x √© par, x = x / 2
    //‚Ä¢ Se x √© impar, x = 3 * x + 1
    //‚Ä¢ Imprime x
    //‚Ä¢ O programa deve parar quando x tiver o valor final de 1.
    public void imprimirX(int x) {
        while (x != 1) {
            if (x % 2 == 0) {
                x /= 2;
            } else {
                x = 3 * x + 1;
            }
            System.out.println(x);
        }
    }
}
